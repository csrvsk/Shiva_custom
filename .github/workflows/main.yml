name: GitHubTest

on:
  # Trigger analysis when pushing to your main branches, and when creating a pull request.
  push:
    branches:
      - main
      - master
      - develop
      - 'releases/**'
  pull_request:
      types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@v1.2
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    
    - name: Sonar for GitHub
      uses: SonarSource/sonar-github-integration@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        SONAR_LOGIN: ${{ secrets.SONAR_TOKEN }}
                            
    - name: Publish SonarQube report
      uses: SonarSource/sonar-github-integration@v7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
        
#     - name: SonarQube Quality Gate Check
#       uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
#       env:
#         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    # Check the Quality Gate status.
#     - name: SonarQube Quality Gate check
#       id: sonarqube-quality-gate-check
#       uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time.
#       timeout-minutes: 5
#       env:
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
       

    # Optionally you can use the output from the Quality Gate in another step.
    # The possible outputs of the `quality-gate-status` variable are `PASSED`, `WARN` or `FAILED`.
#     - name: "Show SonarQube Quality Gate Status value"
#       run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
        
#     - name: Publish SonarQube Report
#       uses: actions/upload-artifact@v2
#       with:
#            name: sonarqube-report
#            path: .scannerwork/report-task.txt
    
#     - name: Publish Coverage Report
#       uses: actions/upload-artifact@v2
#       with:
#            name: coverage-report
#            path: coverage/lcov-report
           
           

#     - name: Deploy to GitHub Pages
#       uses: JamesIves/github-pages-deploy-action@4.1.1
#       with:
#            branch: gh-pages
#            folder: ./coverage/lcov-report
#            token: ${{ secrets.ACCESS_TOKEN }}
#            cname: your-domain.com



# name: GitHubTest

# on:
#   # Trigger analysis when pushing to your main branches, and when creating a pull request.
#   push:
#     branches:
#       - master
#   pull_request:
#     types: [opened, synchronize, reopened]

# jobs:
#   sonarqube:
#     runs-on: ubuntu-latest
#     steps:

        
#     - name: SonarQube Scan
#     - uses: sonarsource/sonarqube-scan-action@master
#       with:
#           projectBaseDir: <csrvsk/Shiva_custom>
#       env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           args: >
#             -Dsonar.projectKey=GitHubTestProject
#             -Dsonar.sources=.
#             -Dsonar.java.binaries=.
#             -Dsonar.java.libraries.=.
          
#     - name: List files in the workspace
#       run: |
#          ls -R /

#     - name: Publish SonarQube Report
#       uses: actions/upload-artifact@v2
#       with:
#           name: sonarqube-report
#           path: .scannerwork/report-task.txt
      
#     - name: Publish Coverage Report
#       uses: actions/upload-artifact@v2
#       with:
#           name: coverage-report
#           path: coverage/lcov-report

#     - name: Deploy to GitHub Pages
#       uses: JamesIves/github-pages-deploy-action@4.1.1
#       with:
#           branch: gh-pages
#           folder: ./coverage/lcov-report
#           token: ${{ secrets.ACCESS_TOKEN }}
#           cname: your-domain.com


